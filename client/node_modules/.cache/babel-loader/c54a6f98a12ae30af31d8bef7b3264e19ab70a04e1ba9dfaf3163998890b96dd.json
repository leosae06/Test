{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roixm\\\\Documents\\\\TestTechnique\\\\client\\\\src\\\\pages\\\\compte.jsx\",\n  _s2 = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Compte = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const handleLogout = async () => {\n    _s();\n    try {\n      // Envoyez une requête au serveur pour déclencher la déconnexion\n      const response = await fetch('http://localhost:3001/logout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        // Si la déconnexion côté serveur réussit, détruisez le token côté client\n        localStorage.removeItem('token');\n        // Redirigez l'utilisateur vers la page de connexion (login)\n        navigate('/login');\n      } else {\n        console.error('Échec de la déconnexion');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la déconnexion :', error);\n    }\n    const [users, setUsers] = useState([]);\n    useEffect(() => {\n      // Fonction asynchrone pour récupérer les utilisateurs depuis le serveur\n      const fetchUsers = async () => {\n        try {\n          const response = await fetch('http://localhost:3001/compte');\n          if (response.ok) {\n            const data = await response.json();\n            setUsers(data);\n          } else {\n            console.error('Échec de la récupération des utilisateurs');\n          }\n        } catch (error) {\n          console.error('Erreur lors de la récupération des utilisateurs :', error);\n        }\n      };\n\n      // Appel de la fonction asynchrone\n      fetchUsers();\n    }, []);\n  };\n  _s(handleLogout, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des utilisateurs :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.email\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"D\\xE9connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s2(Compte, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Compte;\nexport default Compte;\nvar _c;\n$RefreshReg$(_c, \"Compte\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","Compte","_s2","_s","$RefreshSig$","navigate","handleLogout","response","fetch","method","headers","ok","localStorage","removeItem","console","error","users","setUsers","useState","useEffect","fetchUsers","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","index","email","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Roixm/Documents/TestTechnique/client/src/pages/compte.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\n\r\nconst Compte = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Envoyez une requête au serveur pour déclencher la déconnexion\r\n      const response = await fetch('http://localhost:3001/logout', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Si la déconnexion côté serveur réussit, détruisez le token côté client\r\n        localStorage.removeItem('token');\r\n        // Redirigez l'utilisateur vers la page de connexion (login)\r\n        navigate('/login');\r\n      } else {\r\n        console.error('Échec de la déconnexion');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la déconnexion :', error);\r\n    }\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n      // Fonction asynchrone pour récupérer les utilisateurs depuis le serveur\r\n      const fetchUsers = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:3001/compte');\r\n  \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setUsers(data);\r\n          } else {\r\n            console.error('Échec de la récupération des utilisateurs');\r\n          }\r\n        } catch (error) {\r\n          console.error('Erreur lors de la récupération des utilisateurs :', error);\r\n        }\r\n      };\r\n  \r\n      // Appel de la fonction asynchrone\r\n      fetchUsers();\r\n    }, []);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Liste des utilisateurs :</h1>\r\n      <ul>\r\n        {users.map((user, index) => (\r\n          <li key={index}>{user.email}</li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleLogout}>Déconnexion</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Compte;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACnB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAAAH,EAAA;IAC/B,IAAI;MACF;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACf;QACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;QAChC;QACAR,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAM;QACLS,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;IAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;IAEtCC,SAAS,CAAC,MAAM;MACd;MACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;QAC7B,IAAI;UACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;UAE5D,IAAID,QAAQ,CAACI,EAAE,EAAE;YACf,MAAMU,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;YAClCL,QAAQ,CAACI,IAAI,CAAC;UAChB,CAAC,MAAM;YACLP,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;UAC5D;QACF,CAAC,CAAC,OAAOA,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;QAC3E;MACF,CAAC;;MAED;MACAK,UAAU,CAAC,CAAC;IACd,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EAACjB,EAAA,CA5CIG,YAAY;EA8ClB,oBACEN,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC3B,OAAA;MAAAuB,QAAA,EACGP,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB9B,OAAA;QAAAuB,QAAA,EAAiBM,IAAI,CAACE;MAAK,GAAlBD,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL3B,OAAA;MAAQgC,OAAO,EAAE1B,YAAa;MAAAiB,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACzB,GAAA,CA5DID,MAAM;EAAA,QACOH,WAAW;AAAA;AAAAmC,EAAA,GADxBhC,MAAM;AA8DZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}