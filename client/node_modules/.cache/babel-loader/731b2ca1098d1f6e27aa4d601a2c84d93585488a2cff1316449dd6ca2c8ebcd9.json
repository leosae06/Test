{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roixm\\\\Documents\\\\TestTechnique\\\\client\\\\src\\\\pages\\\\compte.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Compte = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleLogout = async () => {\n    try {\n      // Envoyez une requête au serveur pour déclencher la déconnexion\n      const response = await fetch('http://localhost:3001/logout', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        // Si la déconnexion côté serveur réussit, détruisez le token côté client\n        localStorage.removeItem('token');\n        // Redirigez l'utilisateur vers la page de connexion (login)\n        navigate('/login');\n      } else {\n        // Gérez l'échec de la déconnexion, affichez un message d'erreur, etc.\n        console.error('Échec de la déconnexion');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la déconnexion :', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"D\\xE9connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Compte, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Compte;\nexport default Compte;\nvar _c;\n$RefreshReg$(_c, \"Compte\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","Compte","_s","navigate","handleLogout","response","fetch","method","headers","ok","localStorage","removeItem","console","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Roixm/Documents/TestTechnique/client/src/pages/compte.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\n\r\nconst Compte = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Envoyez une requête au serveur pour déclencher la déconnexion\r\n      const response = await fetch('http://localhost:3001/logout', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Si la déconnexion côté serveur réussit, détruisez le token côté client\r\n        localStorage.removeItem('token');\r\n        // Redirigez l'utilisateur vers la page de connexion (login)\r\n        navigate('/login');\r\n      } else {\r\n        // Gérez l'échec de la déconnexion, affichez un message d'erreur, etc.\r\n        console.error('Échec de la déconnexion');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la déconnexion :', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Votre contenu de la page Compte ici */}\r\n      <button onClick={handleLogout}>Déconnexion</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Compte;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACf;QACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;QAChC;QACAR,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAM;QACL;QACAS,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,eAEEd,OAAA;MAAQe,OAAO,EAAEX,YAAa;MAAAU,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACjB,EAAA,CAjCID,MAAM;EAAA,QACOH,WAAW;AAAA;AAAAsB,EAAA,GADxBnB,MAAM;AAmCZ,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}